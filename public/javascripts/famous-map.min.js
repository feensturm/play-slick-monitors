/*
 * Copyright (c) 2014 Gloey Apps
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @author: Hein Rutjes (IjzerenHein)
 * @license MIT
 * @copyright Gloey Apps, 2014
 */

/**
 * Copyright (c) 2014 Gloey Apps
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @author: Hein Rutjes (IjzerenHein)
 * @license MIT
 * @copyright Gloey Apps, 2014
 */

define("famous-map/MapUtility", ["require", "exports", "module"], function (t, i, o) {
    var e = {};
    e.lat = function (t) {
        return t instanceof Array ? t[0] : t.lat instanceof Function ? t.lat() : t.lat
    }, e.lng = function (t) {
        return t instanceof Array ? t[1] : t.lng instanceof Function ? t.lng() : t.lng
    }, e.equals = function (t, i) {
        return e.lat(t) === e.lat(i) && e.lng(t) === e.lng(i)
    }, e.radiansFromDegrees = function (t) {
        return t * (Math.PI / 180)
    }, e.rotationFromPositions = function (t, i) {
        return Math.atan2(e.lng(t) - e.lng(i), e.lat(t) - e.lat(i)) + Math.PI / 2
    }, e.distanceBetweenPositions = function (t, i) {
        var o = 6371, s = e.radiansFromDegrees(e.lat(t)), a = e.radiansFromDegrees(e.lat(i)), n = e.radiansFromDegrees(e.lat(i) - e.lat(t)), r = e.radiansFromDegrees(e.lng(i) - e.lng(t)), h = Math.sin(n / 2) * Math.sin(n / 2) + Math.cos(s) * Math.cos(a) * Math.sin(r / 2) * Math.sin(r / 2), p = 2 * Math.atan2(Math.sqrt(h), Math.sqrt(1 - h)), c = o * p;
        return c
    }, o.exports = e
}), define("famous-map/MapPositionTransitionable", ["require", "exports", "module", "famous/transitions/Transitionable", "./MapUtility"], function (t, i, o) {
    function e(t) {
        this.position = new s([0, 0]), t && this.set(t)
    }

    var s = t("famous/transitions/Transitionable"), a = t("./MapUtility");
    e.prototype.setDefaultTransition = function (t) {
        this.position.setDefault(t)
    }, e.prototype.reset = function (t) {
        var i = [a.lat(t), a.lng(t)];
        this.position.reset(i), this._final = t
    }, e.prototype.set = function (t, i, o) {
        var e = [a.lat(t), a.lng(t)];
        return this.position.set(e, i, o), this._final = t, this
    }, e.prototype.get = function () {
        if (this.isActive()) {
            var t = this.position.get();
            return {lat: t[0], lng: t[1]}
        }
        return this._final
    }, e.prototype.getFinal = function () {
        return this._final
    }, e.prototype.isActive = function () {
        return this.position.isActive()
    }, e.prototype.halt = function () {
        this._final = this.get(), this.position.halt()
    }, o.exports = e
}), define("famous-map/MapTransition", ["require", "exports", "module", "./MapUtility"], function (t, i, o) {
    function e() {
        this.state = void 0, this._startTime = 0, this._startState = 0, this._updateTime = 0, this._endState = 0, this._active = !1, this._duration = 0, this._distance = 0, this._callback = void 0
    }

    function s(t, i, o) {
        return (1 - o) * t + o * i
    }

    function a(t) {
        return t.slice(0)
    }

    var n = t("./MapUtility");
    e.SUPPORTS_MULTIPLE = 2, e.DEFAULT_OPTIONS = {speed: 1e3}, e.prototype.reset = function (t) {
        if (this._callback) {
            var i = this._callback;
            this._callback = void 0, i()
        }
        this.state = a(t), this._startTime = 0, this._updateTime = 0, this._startState = this.state, this._endState = this.state, this._duration = 0, this._distance = 0, this._active = !1
    }, e.prototype.set = function (t, i, o) {
        return i ? (this._speed = e.DEFAULT_OPTIONS.speed, i && i.speed && (this._speed = i.speed), this._startState = this.get(), this._startTime = Date.now(), this._endState = a(t), this._active = !0, this._callback = o, this._distance = n.distanceBetweenPositions(this._startState, this._endState), void(this._duration = this._distance / this._speed * 36e5)) : (this.reset(t), void(o && o()))
    }, e.prototype.get = function (t) {
        if (!this._active) {
            if (this._callback) {
                var i = this._callback;
                this._callback = void 0, i()
            }
            return this.state
        }
        if (t || (t = Date.now()), this._updateTime >= t)return this.state;
        this._updateTime = t;
        var o = t - this._startTime;
        if (o >= this._duration)this.state = this._endState, this._active = !1; else if (0 > o)this.state = this._startState; else {
            var e = o / this._duration, a = s(this._startState[0], this._endState[0], e), n = s(this._startState[1], this._endState[1], e);
            this.state = [a, n]
        }
        return this.state
    }, e.prototype.isActive = function () {
        return this._active
    }, e.prototype.halt = function () {
        this.set(this.get())
    }, o.exports = e
});
var _globalMapViewId = 1;
define("famous-map/MapView", ["require", "exports", "module", "famous/core/Surface", "famous/core/View", "famous/transitions/Transitionable", "./MapUtility", "./MapPositionTransitionable", "./MapTransition"], function (t, i, o) {
    function e() {
        if (a.apply(this, arguments), this.map = null, this.mapType = this.options.type, this._position = new h(this.options.mapOptions.center), this._zoom = {
                center: new h(this.options.mapOptions.center),
                northEast: new h(this.options.mapOptions.center),
                southWest: new h(this.options.mapOptions.center)
            }, this._cache = {}, this.mapType === c.LEAFLET && (this.options.zoomTransition = {duration: 0}), this.options.mapOptions && this.options.id)this.mapId = this.options.id; else {
            this.mapId = "MapView" + _globalMapViewId, _globalMapViewId++;
            var t = new s({classes: ["mapview"], content: '<div id="' + this.mapId + '" style="width: 100%; height: 100%;"></div>', size: [void 0, void 0]});
            this.add(t)
        }
    }

    var s = t("famous/core/Surface"), a = t("famous/core/View"), n = t("famous/transitions/Transitionable"), r = t("./MapUtility"), h = t("./MapPositionTransitionable"), p = t("./MapTransition");
    n.registerMethod("map-speed", p);
    var c = {GOOGLEMAPS: 1, LEAFLET: 2};
    e.prototype = Object.create(a.prototype), e.prototype.constructor = e, e.MapType = c, e.DEFAULT_OPTIONS = {
        type: c.GOOGLEMAPS,
        mapOptions: {zoom: 10, center: {lat: 51.4400867, lng: 5.4782571}},
        id: null,
        zoomTransition: {duration: 100}
    }, e.prototype._initMap = function () {
        var t = document.getElementById(this.mapId);
        if (t)switch (this.mapType) {
            case c.GOOGLEMAPS:
                this.map = new google.maps.Map(t, this.options.mapOptions);
                var i = this.map.addListener("projection_changed", function () {
                    google.maps.event.removeListener(i), this._initComplete = !0, this._eventOutput.emit("load", this)
                }.bind(this));
                break;
            case c.LEAFLET:
                this.map = L.map(t, this.options.mapOptions), this._initComplete = !0, this._eventOutput.emit("load", this)
        }
    }, e.prototype.getMap = function () {
        return this.map
    }, e.prototype.setPosition = function (t, i, o) {
        return this._position.set(t, i, o), this._positionInvalidated = !0, this
    }, e.prototype.getPosition = function () {
        return this._zoom.center.get()
    }, e.prototype.getFinalPosition = function () {
        return this._position.getFinal()
    }, e.prototype.getZoom = function () {
        return this._cache.zoom
    }, e.prototype.pointFromPosition = function (t) {
        switch (this.mapType) {
            case c.GOOGLEMAPS:
                t instanceof google.maps.LatLng || (t = new google.maps.LatLng(r.lat(t), r.lng(t), !0));
                var i = this.map.getProjection().fromLatLngToPoint(t);
                return {x: (i.x - this._cache.bottomLeft.x) * this._cache.scale, y: (i.y - this._cache.topRight.y) * this._cache.scale};
            case c.LEAFLET:
                var o = this.map.latLngToContainerPoint(t);
                return o
        }
    }, e.prototype.positionFromPoint = function (t) {
        switch (this.mapType) {
            case c.GOOGLEMAPS:
                var i = new google.maps.Point(t.x / this._cache.scale + this._cache.bottomLeft.x, t.y / this._cache.scale + this._cache.topRight.y);
                return this.map.getProjection().fromPointToLatLng(i);
            case c.LEAFLET:
                return this.map.containerPointToLatLng(t)
        }
    }, e.prototype.getSize = function () {
        return this._cache.size
    }, e.prototype.halt = function () {
        this._position.halt(), this._positionInvalidated = !0
    }, e.prototype.isActive = function () {
        return this._position.isActive()
    }, e.prototype._updateCache = function (t, i, o) {
        switch (this._cache.finalZoom = t, this._cache.finalScale = Math.pow(2, this._cache.finalZoom), this._cache.finalNorthEast = i, this._cache.finalSouthWest = o, this.mapType) {
            case c.GOOGLEMAPS:
                i instanceof google.maps.LatLng || (i = new google.maps.LatLng(r.lat(i), r.lng(i), !0)), o instanceof google.maps.LatLng || (o = new google.maps.LatLng(r.lat(o), r.lng(o), !0));
                var e = this.map.getProjection().fromLatLngToPoint(i), s = this.map.getProjection().fromLatLngToPoint(o);
                this._cache.size = [(e.x - s.x) * this._cache.finalScale, (s.y - e.y) * this._cache.finalScale];
                break;
            case c.LEAFLET:
                var a = this.map.getSize();
                this._cache.size = [a.x, a.y]
        }
        switch (this.mapType) {
            case c.GOOGLEMAPS:
                i = this._zoom.northEast.get(), o = this._zoom.southWest.get(), i instanceof google.maps.LatLng || (i = new google.maps.LatLng(r.lat(i), r.lng(i), !0)), o instanceof google.maps.LatLng || (o = new google.maps.LatLng(r.lat(o), r.lng(o), !0)), this._cache.topRight = this.map.getProjection().fromLatLngToPoint(i), this._cache.bottomLeft = this.map.getProjection().fromLatLngToPoint(o), this._cache.scale = this._cache.size[0] / (this._cache.topRight.x - this._cache.bottomLeft.x), this._cache.zoom = Math.log(this._cache.scale) / Math.log(2);
                break;
            case c.LEAFLET:
                this._cache.zoom = t
        }
    }, e.prototype._getMapInfo = function () {
        var t, i, o, e, s;
        switch (this.mapType) {
            case c.GOOGLEMAPS:
                t = this.map.getBounds(), e = this.map.getCenter(), s = this.map.getZoom();
                var a = r.lng(e);
                i = t.getNorthEast();
                for (var n = i.lng(); a > n;)n += 360;
                for (; n > a + 360;)n -= 360;
                o = t.getSouthWest();
                for (var h = o.lng(); a - 360 > h;)h += 360;
                for (; h > a;)h -= 360;
                return {zoom: s, center: {lat: e.lat(), lng: e.lng()}, southWest: {lat: o.lat(), lng: h}, northEast: {lat: i.lat(), lng: n}};
            case c.LEAFLET:
                return t = this.map.getBounds(), o = t.getSouthWest(), i = t.getNorthEast(), e = this.map.getCenter(), s = this.map.getZoom(), {
                    zoom: s,
                    center: {lat: e.lat, lng: e.lng},
                    southWest: {lat: o.lat, lng: o.lng},
                    northEast: {lat: i.lat, lng: i.lng}
                }
        }
    }, e.prototype.render = function () {
        if (this.map || this._initMap(), this._initComplete) {
            var t, i = this._getMapInfo(), o = !1;
            if (i.zoom !== this._cache.finalZoom ? (this._zoom.northEast.halt(), this._zoom.southWest.halt(), this._zoom.center.halt(), this._zoom.northEast.set(i.northEast, this.options.zoomTransition), this._zoom.southWest.set(i.southWest, this.options.zoomTransition), this._zoom.center.set(i.center, this.options.zoomTransition), o = !0) : this._zoom.northEast.isActive() ? (this._zoom.northEast.get(), o = !0) : (this._zoom.northEast.reset(i.northEast), this._zoom.southWest.reset(i.southWest), this._zoom.center.reset(i.center)), !o && i.zoom === this._cache.finalZoom && r.equals(i.northEast, this._cache.finalNorthEast) && r.equals(i.southWest, this._cache.finalSouthWest) || this._updateCache(i.zoom, i.northEast, i.southWest), this._position.isActive() || this._positionInvalidated ? (t = {center: this._position.get()}, this._positionInvalidated = !1) : this._position.reset(i.center), t)switch (this.mapType) {
                case c.GOOGLEMAPS:
                    this.map.setOptions(t);
                    break;
                case c.LEAFLET:
                    this.map.panTo(t.center, {animate: !1})
            }
        }
        return this._node.render()
    }, o.exports = e
}), define("famous-map/MapModifier", ["require", "exports", "module", "famous/core/Transform", "./MapUtility"], function (t, i, o) {
    function e(t) {
        this.mapView = t.mapView, this._output = {
            transform: s.identity,
            opacity: 1,
            origin: null,
            align: null,
            size: null,
            target: null
        }, this._cache = {}, this._positionGetter = null, this._rotateTowardsGetter = null, this._offset = t.offset, this._zoomScale = t.zoomScale, this._zoomBase = t.zoomBase, t.position && this.positionFrom(t.position), t.rotateTowards && this.rotateTowardsFrom(t.rotateTowards)
    }

    var s = t("famous/core/Transform"), a = t("./MapUtility");
    e.prototype.positionFrom = function (t) {
        return t ? t instanceof Function ? this._positionGetter = t : t instanceof Object && t.getPosition ? this._positionGetter = t.getPosition.bind(t) : (this._positionGetter = null, this._position = t) : (this._positionGetter = null, this._position = null), this
    }, e.prototype.rotateTowardsFrom = function (t) {
        return t ? t instanceof Function ? this._rotateTowardsGetter = t : t instanceof Object && t.getPosition ? this._rotateTowardsGetter = t.getPosition.bind(t) : (this._rotateTowardsGetter = null, this._rotateTowards = t) : (this._rotateTowardsGetter = null, this._rotateTowards = null), this
    }, e.prototype.zoomBaseFrom = function (t) {
        return this._zoomBase = t, this
    }, e.prototype.zoomScaleFrom = function (t) {
        return this._zoomScale = t, this
    }, e.prototype.offsetFrom = function (t) {
        return this._offset = t, this
    }, e.prototype.getPosition = function () {
        return this._positionGetter || this._position
    }, e.prototype.getRotateTowards = function () {
        return this._rotateTowardsGetter || this._rotateTowards
    }, e.prototype.getZoomBase = function () {
        return this._zoomBase
    }, e.prototype.getZoomScale = function () {
        return this._zoomScale
    }, e.prototype.getOffset = function () {
        return this._offset
    }, e.prototype.modify = function (t) {
        var i = !1;
        if (void 0 !== this._zoomBase) {
            var o;
            if (this._zoomScale)if (this._zoomScale instanceof Function)o = this._zoomScale(this._zoomBase, this.mapView.getZoom()); else {
                var e = this.mapView.getZoom() - this._zoomBase + 1;
                o = 0 > e ? 1 / (Math.abs(e) + 1) * this._zoomScale : (1 + e) * this._zoomScale
            } else o = Math.pow(2, this.mapView.getZoom() - this._zoomBase);
            this._cache.scaling !== o && (this._cache.scaling = o, this._cache.scale = s.scale(o, o, 1), i = !0)
        } else this._cache.scale && (this._cache.scale = null, this._cache.scaling = null, i = !0);
        var n = this._positionGetter ? this._positionGetter() : this._position;
        if (n) {
            this._offset && (n = {lat: a.lat(n) + a.lat(this._offset), lng: a.lng(n) + a.lng(this._offset)});
            var r = this._rotateTowardsGetter ? this._rotateTowardsGetter() : this._rotateTowards;
            if (r) {
                var h = a.rotationFromPositions(n, r);
                this._cache.rotation !== h && (this._cache.rotation = h, this._cache.rotate = s.rotateZ(h), i = !0)
            } else this._cache.rotate && (this._cache.rotate = null, this._cache.rotation = null, i = !0);
            var p = this.mapView.pointFromPosition(n);
            this._cache.point && p.x === this._cache.point.x && p.y === this._cache.point.y || (this._cache.point = p, this._cache.translate = s.translate(p.x, p.y, 0), i = !0)
        } else this._cache.translate && (this._cache.point = null, this._cache.translate = null, i = !0);
        if (i) {
            var c = this._cache.scale;
            this._cache.rotate && (c = c ? s.multiply(this._cache.rotate, c) : this._cache.rotate), this._cache.translate && (c = c ? s.multiply(this._cache.translate, c) : this._cache.translate), this._output.transform = c
        }
        return this._output.target = t, this._output
    }, o.exports = e
}), define("famous-map/MapStateModifier", ["require", "exports", "module", "./MapModifier", "./MapPositionTransitionable"], function (t, i, o) {
    function e(t) {
        this.mapView = t.mapView, this._positionState = new a(t.position), this._rotateTowardsState = new a(t.rotateTowards), this._modifier = new s({mapView: this.mapView}), t.position && this.setPosition(t.position), t.rotateTowards && this.rotateTowards(t.rotateTowards), t.offset && this.setOffset(t.offset), void 0 !== t.zoomBase && this.setZoomBase(t.zoomBase), t.zoomScale && this.setZoomScale(t.zoomScale)
    }

    var s = t("./MapModifier"), a = t("./MapPositionTransitionable");
    e.prototype.setPosition = function (t, i, o) {
        return this._positionState.set(t, i, o), this
    }, e.prototype.rotateTowards = function (t, i, o) {
        this._rotateTowardsState.set(t, i, o)
    }, e.prototype.setZoomBase = function (t) {
        return this._modifier.zoomBaseFrom(t), this
    }, e.prototype.setZoomScale = function (t) {
        return this._modifier.zoomScaleFrom(t), this
    }, e.prototype.setOffset = function (t) {
        return this._modifier.offsetFrom(t), this
    }, e.prototype.getPosition = function () {
        return this._positionState.get()
    }, e.prototype.getRotateTowards = function () {
        return this._rotateTowardsState.get()
    }, e.prototype.getFinalPosition = function () {
        return this._positionState.getFinal()
    }, e.prototype.getFinalRotateTowards = function () {
        return this._rotateTowardsState.getFinal()
    }, e.prototype.getZoomBase = function () {
        return this._modifier.getZoomBase()
    }, e.prototype.getZoomScale = function () {
        return this._modifier.getZoomScale()
    }, e.prototype.getOffset = function () {
        return this._modifier.getOffset()
    }, e.prototype.halt = function () {
        this._positionState.halt(), this._rotateTowardsState.halt()
    }, e.prototype.isActive = function () {
        return this._positionState.isActive() || this._rotateTowardsState.isActive()
    }, e.prototype.modify = function (t) {
        return this._modifier.positionFrom(this._positionState.get()), this._modifier.rotateTowardsFrom(this._rotateTowardsState.getFinal()), this._modifier.modify(t)
    }, o.exports = e
}), define("MapMinify", ["require", "famous-map/MapView", "famous-map/MapModifier", "famous-map/MapStateModifier", "famous-map/MapUtility", "famous-map/MapPositionTransitionable", "famous-map/MapTransition"], function (t) {
    var i = t("famous-map/MapView");
    i = t("famous-map/MapModifier"), i = t("famous-map/MapStateModifier"), i = t("famous-map/MapUtility"), i = t("famous-map/MapPositionTransitionable"), i = t("famous-map/MapTransition")
});
